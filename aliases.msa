# Help / Rules / Vote Messages

/help = >>>
  msg(colorize('&9Need help?  Visit &3http://the-obsidian.com/help/'))
<<<

*:/rules = >>>
  msg(colorize('&9Please see the website for the guidelines: &3http://the-obsidian.com/guidelines/'))
<<<

*:/vote = >>>
  msg(colorize('&6VOTE: &fHelp support the server!  Vote for us here:'))
  msg(colorize('&7- &3http://minecraftservers.org/server/237389'))
  msg(colorize('&7- &3http://www.minestatus.net/132032-the-obsidian'))
  msg(colorize('&7- &3http://www.mineservers.net/servers/5976'))
  msg(colorize('&7- &3http://www.planetminecraft.com/server/the-obsidian/'))
<<<

# Common Commands

*:/cleanroom = >>>
  @player = player()
  @world = pworld()
  @location = ploc()

  if (@world == 'test_world') {
    msg(colorize('&aReturning to the overworld'))
    store_value(@player, 'creativeDestination', @location)
    set_ploc(get_value(@player, 'creativeReturn'))
  } else if (@world == 'world' || @world == 'district12') {
    msg(colorize('&aEntering creative cleanroom'))
    msg(colorize('&bUse /cleanroom again to return to the overworld'))
    store_value(@player, 'creativeReturn', @location)
    if (!has_value(@player, 'creativeDestination')) {
      store_value(@player, 'creativeDestination', get_spawn('test_world'))
    }
    set_ploc(get_value(@player, 'creativeDestination'))
  } else {
    msg(colorize('&cYou can only enter from the overworld!'))
  }
<<<

*:/mail [$action] [$] = >>>
  if($action == 'read') {
    if (get_value(concat('mail', player())) == null) {
      msg(concat(color(green), 'No new mail.'))
    } else {
      msg(concat(color(green), get_value(concat('mail', player()))))
      clear_value(concat('mail', player()))
      msg(concat(color(green), 'Your mail has been marked as read.'))
    }
  } else {
    if ($ == '') {
      msg(concat(color(red), 'Usage: /mail <player> <message>'))
      msg(concat(color(red), 'To see your mail, do /mail read'))
    } else {
      @player = _fuzzy_find_player($action)

      if (@player) {
        if (ponline(@player)) {
          tmsg(@player, concat(color(green), 'New mail message. Type /mail read to see your messages.'))
        }

        if (get_value(concat('mail', @player)) == null) {
          store_value(concat('mail', @player), concat(concat(' ', player()), concat(': ', $)))
        } else {
          store_value(concat('mail', @player), concat(get_value(concat('mail', @player)), concat(concat('\n', player()), concat(': ', $))))
        }

        msg(concat(color(green), 'Mail message sent to '.@player))
      } else {
        msg(concat(color(red), 'Player not found'))
      }
    }
  }
<<<

*:/seen $p = >>>
  @player = _fuzzy_find_player($p)

  if (!@player) {
    die(colorize('&cPlayer not found!'))
  }

  @time = plast_played(@player)
  msg(@time)

  if (@time == 0) {
    die(colorize('&cThat player has not logged in yet.'))
  }

  @date = simple_date('MMMM d, YYYY, K:mm a, z', @time)

  msg(colorize(@player . ' was last seen at ' . @date))
<<<

*:/wlreport = >>>
  @whitelist = get_whitelisted_players()

  @players = array()
  @not_seen = array()
  foreach(@p in @whitelist) {
    @last = plast_played(@p)
    if (@last == 0) {
      @not_seen[] = @p
    } else {
      @players[] = array(name: @p, time: (time() - @last) / 1000 / 60 / 60 / 24)
    }
  }

  array_sort(@players, closure(@left, @right) {
    return (@left['time'] > @right['time'])
  })

  msg('Never seen:')
  foreach (@p in @not_seen) {
    msg('- '.@p)
  }

  msg('Seen:')
  foreach (@p in @players) {
    msg('- '.@p['name'].': '.@p['time'].' days')
  }
<<<

*:/slimes = >>>
  @loc = ploc()
  if (is_slime_chunk(integer(@loc['x']), integer(@loc['z']))) {
    msg(colorize('&6This is a slime chunk'))
  } else {
    msg(colorize('&6This is not a slime chunk'))
  }
<<<

# Premium Commands

obsidian.premium.workbench:/workbench = pworkbench()
/wb = /workbench

obsidian.premium.backpack:/backpack = show_enderchest()
/bp = /backpack

# Debug Commands

obsidian.admin:/pinv $p = >>>
  @player = _fuzzy_find_player($p)
  if (!@player) {
    die(colorize('&cPlayer not found'))
  }

  msg(get_inventory(pinfo(@player, 13)))
<<<

obsidian.admin:/bmessage = _bmessage()

obsidian.admin:/sleep = >>>
  @world = pworld()
  if (@world != 'world') {
    die(colorize('&cYou can only sleep in the overworld!'))
  }

  @time = get_world_time()
  if (@time < 12541 || @time >23458) {
    die(colorize('&cYou can only sleep at night!'))
  }

  @player = player()
  @prefix = _player_prefix(@player)
  broadcast(colorize('&6SLEEP: '.@prefix.@player.' has initiated server sleep in 10 seconds'))
  broadcast(colorize('&aUse /nosleep to cancel'))
  store_value('sleepOK', true)

  set_timeout(10000, closure(
    if (get_value('sleepOK')) {
      set_world_time('world', 23000)
      broadcast(colorize('&6SLEEP: sleep successful!'))
    }
    clear_value('sleepOK')
  ))
<<<

obsidian.admin:/nosleep = >>>
  if (get_value('sleepOK')) {
    clear_value('sleepOK')
    @player = player()
    @prefix = _player_prefix(@player)
    broadcast(colorize('&6SLEEP: '.@prefix.@player.' cancelled server sleep'))
  } else {
    msg(colorize('&cThere is no pending sleep request!'))
  }
<<<

# Buycraft Commands

server.carnival:/carnival = >>>
  @ap = all_players('world')
  foreach(@p in @ap) {
    set_peffect(@p, 8, 1, 300)
  }
<<<

server.fireworks:/fireworks = >>>
  @ap = all_players('world')

  @options = array(
    'colors': 'RED|GREEN|BLUE',
    'flicker': true,
    'trail': true,
    'type': 'BALL_LARGE'
  )
  for(@i = 0, @i < 20, @i = @i + 1) {
    for(@j = 0, @j < array_size(@ap), @j = @j + 1) {
      queue_push(closure() {
        @location = pinfo(array_get(@ap, @j))[1]
        @location[0] = @location[0] + rand(-20, 20)
        @location[2] = @location[2] + rand(-20, 20)
        @location[3] = pinfo(array_get(@ap, @j))[7]
        launch_firework(@location, @options)
      })
    }
    queue_delay(1000)
  }
<<<

server.cake:/cake $1 = >>>
  @players = all_players()
  foreach(@player in @players) {
    @id = pinfo(@player, 13)
    @meta = array(
      'display': 'Cake!',
      'lore': 'From ' . $1
    )
    add_to_inventory(@id, 354, 1, @meta)
  }
<<<
